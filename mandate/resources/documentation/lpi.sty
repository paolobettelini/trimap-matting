\NeedsTeXFormat{LaTeX2e}

\ProvidesPackage{lpi}[2023/02/10 LPI document format and utilities]

\RequirePackage{hyperref}
\RequirePackage{geometry}
\RequirePackage{fancyhdr}
\RequirePackage{lastpage}
\RequirePackage{wrapfig}
\RequirePackage{url}
\RequirePackage{fullpage}
\RequirePackage{xcolor}
\RequirePackage{listings}
\RequirePackage{glossaries}
\RequirePackage{graphicx}

\newcommand{\lpisetup}[1]{
    \geometry{
    a4paper,
    bottom=3cm,
    headheight=4cm,
    top=2cm
    }

    \hypersetup{
        colorlinks=true,
        linkcolor=black,
        urlcolor=blue,
        pdftitle={#1 - Documentazione},
        pdfpagemode=FullScreen,
    }

    \let\Author\@author

    \fancypagestyle{header-pages}
    {
        %\setlength\headheight{20pt}
        \setlength{\headsep}{30pt}
        \fancyhf{}
        \fancyhead[L]{SAMT \- Sezione Informatica}
        \fancyhead[C]{#1}
        \fancyhead[R]{Pagina \thepage \,di \pageref{LastPage}}
        \fancyfoot[L]{\Author}
        \fancyfoot[R]{\today}
    }

    \AtBeginShipout{%
        \thispagestyle{header-pages}
    }
}

% commands

\newcommand{\quotes}[1]{``#1''}

\newcommand\hr{\par\vspace{-.5\ht\strutbox}\noindent\hrulefill\par\vspace{0.15cm}}

\newcommand{\wrapfill}{
    \par
    \ifnum \value{WF@wrappedlines} > 0
        \addtocounter{WF@wrappedlines}{-1}%
        \null\vspace{
            \arabic{WF@wrappedlines}
            \baselineskip
        }
        \WFclear
    \fi
}

% requirements

\newcommand{\subreq}[3]{
    \textbf{Req-#1\_#2} & #3 \\
}

\newcommand{\requirement}[7]{
    \bgroup{}
    \def\arraystretch{1.25}
    \begin{center}
        \begin{tabular}{ |l|p{9cm}| }
            \hline
            \multicolumn{2}{|c|}{\textbf{Req-#1}} \\
            \hline
            \textbf{Name} & #2 \\
            \hline
            \textbf{Priority} & #3 \\
            \hline
            \textbf{Version} & #4 \\
            \hline
            \textbf{Notes} & #5 \\
            \hline
            \textbf{Description} & #6 \\
            \ifx&#7&%
            % empty parameter
            \else
                \hline
                \multicolumn{2}{|c|}{\textbf{Subrequirements}} \\
                \hline
                #7
            \fi
            \hline
        \end{tabular}
    \end{center}
    \egroup{}
}

% test

\newcommand{\test}[5]{
    \bgroup{}
    \def\arraystretch{1.25}
    \begin{center}
        \begin{tabular}{ |l|p{9cm}| }
            \hline
            \multicolumn{2}{|c|}{\textbf{Test-#1}} \\
            \hline
            \textbf{Name} & #2 \\
            \hline
            \textbf{Reference} & #3 \\
            \hline
            \textbf{Prerequisites} & #4 \\
            \hline
            \textbf{Description} &
            \begin{itemize}
                #5
            \end{itemize} \\
            \hline
        \end{tabular}
    \end{center}
    \egroup{}
}

% listings

\lstdefinestyle{boxed} {
    basicstyle=\ttfamily,
    numbers=none,
    frame=lines,
    backgroundcolor=\color[gray]{0.97}
}

\lstdefinelanguage{Rust}{
    sensitive,
    morecomment=[l]{//},
    morecomment=[s]{/*}{*/},
    moredelim=[s][{\itshape\color[rgb]{0,0,0.75}}]{\#[}{]},
    morestring=[b]{"},
    alsodigit={},
    alsoother={},
    alsoletter={!},
    %
    % [1] reserve keywords
    % [2] traits
    % [3] primitive types
    % [4] type and value constructors
    % [5] identifier
    %
    % control flow keywords
    morekeywords={break, continue, else, for, if, in, loop, match, return, while},
    % in the context of variables
    morekeywords={as, const, let, move, mut, ref, static},
    % in the context of declarations
    morekeywords={dyn, enum, fn, impl, Self, self, struct, trait, type, union, use, where},
    % in the context of modularisation
    morekeywords={crate, extern, mod, pub, super},
    % markers
    morekeywords={unsafe},
    % reserved identifiers
    morekeywords={abstract, alignof, become, box, do, final, macro, offsetof, override, priv, proc, pure, sizeof, typeof, unsized, virtual, yield},
    % grep 'pub trait [A-Za-z][A-Za-z0-9]*' -r . | sed 's/^.*pub trait \([A-Za-z][A-Za-z0-9]*\).*/\1/g' | sort -u | tr '\n' ',' | sed 's/^\(.*\),$/{\1}\n/g' | sed 's/,/, /g'
    morekeywords=[2]{Add, AddAssign, Any, AsciiExt, AsInner, AsInnerMut, AsMut, AsRawFd, AsRawHandle, AsRawSocket, AsRef, Binary, BitAnd, BitAndAssign, Bitor, BitOr, BitOrAssign, BitXor, BitXorAssign, Borrow, BorrowMut, Boxed, BoxPlace, BufRead, BuildHasher, CastInto, CharExt, Clone, CoerceUnsized, CommandExt, Copy, Debug, DecodableFloat, Default, Deref, DerefMut, DirBuilderExt, DirEntryExt, Display, Div, DivAssign, DoubleEndedIterator, DoubleEndedSearcher, Drop, EnvKey, Eq, Error, ExactSizeIterator, ExitStatusExt, Extend, FileExt, FileTypeExt, Float, Fn, FnBox, FnMut, FnOnce, Freeze, From, FromInner, FromIterator, FromRawFd, FromRawHandle, FromRawSocket, FromStr, FullOps, FusedIterator, Generator, Hash, Hasher, Index, IndexMut, InPlace, Int, Into, IntoCow, IntoInner, IntoIterator, IntoRawFd, IntoRawHandle, IntoRawSocket, IsMinusOne, IsZero, Iterator, JoinHandleExt, LargeInt, LowerExp, LowerHex, MetadataExt, Mul, MulAssign, Neg, Not, Octal, OpenOptionsExt, Ord, OsStrExt, OsStringExt, Packet, PartialEq, PartialOrd, Pattern, PermissionsExt, Place, Placer, Pointer, Product, Put, RangeArgument, RawFloat, Read, Rem, RemAssign, Seek, Shl, ShlAssign, Shr, ShrAssign, Sized, SliceConcatExt, SliceExt, SliceIndex, Stats, Step, StrExt, Sub, SubAssign, Sum, Sync, TDynBenchFn, Terminal, Termination, ToOwned, ToSocketAddrs, ToString, Try, TryFrom, TryInto, UnicodeStr, Unsize, UpperExp, UpperHex, WideInt, Write},
    % additional traits
    morekeywords=[2]{Send},
    % primitive types
    morekeywords=[3]{bool, char, f32, f64, i8, i16, i32, i64, isize, str, u8, u16, u32, u64, unit, usize, i128, u128},
    % prelude value constructors
    morekeywords=[4]{Err, false, None, Ok, Some, true},
    % grep 'pub \(type\|struct\|enum\) [A-Za-z][A-Za-z0-9]*' -r . | sed 's/^.*pub \(type\|struct\|enum\) \([A-Za-z][A-Za-z0-9]*\).*/\2/g' | sort -u | tr '\n' ',' | sed 's/^\(.*\),$/{\1}\n/g' | sed 's/,/, /g'    
    morekeywords=[3]{AccessError, Adddf3, AddI128, AddoI128, AddoU128, ADDRESS, ADDRESS64, addrinfo, ADDRINFOA, AddrParseError, Addsf3, AddU128, advice, aiocb, Alignment, AllocErr, AnonPipe, Answer, Arc, Args, ArgsInnerDebug, ArgsOs, Argument, Arguments, ArgumentV1, Ashldi3, Ashlti3, Ashrdi3, Ashrti3, AssertParamIsClone, AssertParamIsCopy, AssertParamIsEq, AssertUnwindSafe, AtomicBool, AtomicPtr, Attr, auxtype, auxv, BackPlace, BacktraceContext, Barrier, BarrierWaitResult, Bencher, BenchMode, BenchSamples, BinaryHeap, BinaryHeapPlace, blkcnt, blkcnt64, blksize, BOOL, boolean, BOOLEAN, BoolTrie, BorrowError, BorrowMutError, Bound, Box, bpf, BTreeMap, BTreeSet, Bucket, BucketState, Buf, BufReader, BufWriter, Builder, BuildHasherDefault, BY, BYTE, Bytes, CannotReallocInPlace, cc, Cell, Chain, CHAR, CharIndices, CharPredicateSearcher, Chars, CharSearcher, CharsError, CharSliceSearcher, CharTryFromError, Child, ChildPipes, ChildStderr, ChildStdin, ChildStdio, ChildStdout, Chunks, ChunksMut, ciovec, clock, clockid, Cloned, cmsgcred, cmsghdr, CodePoint, Color, ColorConfig, Command, CommandEnv, Component, Components, CONDITION, condvar, Condvar, CONSOLE, CONTEXT, Count, Cow, cpu, CRITICAL, CStr, CString, CStringArray, Cursor, Cycle, CycleIter, daddr, DebugList, DebugMap, DebugSet, DebugStruct, DebugTuple, Decimal, Decoded, DecodeUtf16, DecodeUtf16Error, DecodeUtf8, DefaultEnvKey, DefaultHasher, dev, device, Difference, Digit32, DIR, DirBuilder, dircookie, dirent, dirent64, DirEntry, Discriminant, DISPATCHER, Display, Divdf3, Divdi3, Divmoddi4, Divmodsi4, Divsf3, Divsi3, Divti3, dl, Dl, Dlmalloc, Dns, DnsAnswer, DnsQuery, dqblk, Drain, DrainFilter, Dtor, Duration, DwarfReader, DWORD, DWORDLONG, DynamicLibrary, Edge, EHAction, EHContext, Elf32, Elf64, Empty, EmptyBucket, EncodeUtf16, EncodeWide, Entry, EntryPlace, Enumerate, Env, epoll, errno, Error, ErrorKind, EscapeDebug, EscapeDefault, EscapeUnicode, event, Event, eventrwflags, eventtype, ExactChunks, ExactChunksMut, EXCEPTION, Excess, ExchangeHeapSingleton, exit, exitcode, ExitStatus, Failure, fd, fdflags, fdsflags, fdstat, ff, fflags, File, FILE, FileAttr, filedelta, FileDesc, FilePermissions, filesize, filestat, FILETIME, filetype, FileType, Filter, FilterMap, Fixdfdi, Fixdfsi, Fixdfti, Fixsfdi, Fixsfsi, Fixsfti, Fixunsdfdi, Fixunsdfsi, Fixunsdfti, Fixunssfdi, Fixunssfsi, Fixunssfti, Flag, FlatMap, Floatdidf, FLOATING, Floatsidf, Floatsisf, Floattidf, Floattisf, Floatundidf, Floatunsidf, Floatunsisf, Floatuntidf, Floatuntisf, flock, ForceResult, FormatSpec, Formatted, Formatter, Fp, FpCategory, fpos, fpos64, fpreg, fpregset, FPUControlWord, Frame, FromBytesWithNulError, FromUtf16Error, FromUtf8Error, FrontPlace, fsblkcnt, fsfilcnt, fsflags, fsid, fstore, fsword, FullBucket, FullBucketMut, FullDecoded, Fuse, GapThenFull, GeneratorState, gid, glob, glob64, GlobalDlmalloc, greg, group, GROUP, Guard, GUID, Handle, HANDLE, Handler, HashMap, HashSet, Heap, HINSTANCE, HMODULE, hostent, HRESULT, id, idtype, if, ifaddrs, IMAGEHLP, Immut, in, in6, Incoming, Infallible, Initializer, ino, ino64, inode, input, InsertResult, Inspect, Instant, int16, int32, int64, int8, integer, IntermediateBox, Internal, Intersection, intmax, IntoInnerError, IntoIter, IntoStringError, intptr, InvalidSequence, iovec, ip, IpAddr, ipc, Ipv4Addr, ipv6, Ipv6Addr, Ipv6MulticastScope, Iter, IterMut, itimerspec, itimerval, jail, JoinHandle, JoinPathsError, KDHELP64, kevent, kevent64, key, Key, Keys, KV, l4, LARGE, lastlog, launchpad, Layout, Lazy, lconv, Leaf, LeafOrInternal, Lines, LinesAny, LineWriter, linger, linkcount, LinkedList, load, locale, LocalKey, LocalKeyState, Location, lock, LockResult, loff, LONG, lookup, lookupflags, LookupHost, LPBOOL, LPBY, LPBYTE, LPCSTR, LPCVOID, LPCWSTR, LPDWORD, LPFILETIME, LPHANDLE, LPOVERLAPPED, LPPROCESS, LPPROGRESS, LPSECURITY, LPSTARTUPINFO, LPSTR, LPVOID, LPWCH, LPWIN32, LPWSADATA, LPWSAPROTOCOL, LPWSTR, Lshrdi3, Lshrti3, lwpid, M128A, mach, major, Map, mcontext, Metadata, Metric, MetricMap, mflags, minor, mmsghdr, Moddi3, mode, Modsi3, Modti3, MonitorMsg, MOUNT, mprot, mq, mqd, msflags, msghdr, msginfo, msglen, msgqnum, msqid, Muldf3, Mulodi4, Mulosi4, Muloti4, Mulsf3, Multi3, Mut, Mutex, MutexGuard, MyCollection, n16, NamePadding, NativeLibBoilerplate, nfds, nl, nlink, NodeRef, NoneError, NonNull, NonZero, nthreads, NulError, OccupiedEntry, off, off64, oflags, Once, OnceState, OpenOptions, Option, Options, OptRes, Ordering, OsStr, OsString, Output, OVERLAPPED, Owned, Packet, PanicInfo, Param, ParseBoolError, ParseCharError, ParseError, ParseFloatError, ParseIntError, ParseResult, Part, passwd, Path, PathBuf, PCONDITION, PCONSOLE, Peekable, PeekMut, Permissions, PhantomData, pid, Pipes, PlaceBack, PlaceFront, PLARGE, PoisonError, pollfd, PopResult, port, Position, Powidf2, Powisf2, Prefix, PrefixComponent, PrintFormat, proc, Process, PROCESS, processentry, protoent, PSRWLOCK, pthread, ptr, ptrdiff, PVECTORED, Queue, radvisory, RandomState, Range, RangeFrom, RangeFull, RangeInclusive, RangeMut, RangeTo, RangeToInclusive, RawBucket, RawFd, RawHandle, RawPthread, RawSocket, RawTable, RawVec, Rc, ReadDir, Receiver, recv, RecvError, RecvTimeoutError, ReentrantMutex, ReentrantMutexGuard, Ref, RefCell, RefMut, REPARSE, Repeat, Result, Rev, Reverse, riflags, rights, rlim, rlim64, rlimit, rlimit64, roflags, Root, RSplit, RSplitMut, RSplitN, RSplitNMut, RUNTIME, rusage, RwLock, RWLock, RwLockReadGuard, RwLockWriteGuard, sa, SafeHash, Scan, sched, scope, sdflags, SearchResult, SearchStep, SECURITY, SeekFrom, segment, Select, SelectionResult, sem, sembuf, send, Sender, SendError, servent, sf, Shared, shmatt, shmid, ShortReader, ShouldPanic, Shutdown, siflags, sigaction, SigAction, sigevent, sighandler, siginfo, Sign, signal, signalfd, SignalToken, sigset, sigval, Sink, SipHasher, SipHasher13, SipHasher24, size, SIZE, Skip, SkipWhile, Slice, SmallBoolTrie, sockaddr, SOCKADDR, sockcred, Socket, SOCKET, SocketAddr, SocketAddrV4, SocketAddrV6, socklen, speed, Splice, Split, SplitMut, SplitN, SplitNMut, SplitPaths, SplitWhitespace, spwd, SRWLOCK, ssize, stack, STACKFRAME64, StartResult, STARTUPINFO, stat, Stat, stat64, statfs, statfs64, StaticKey, statvfs, StatVfs, statvfs64, Stderr, StderrLock, StderrTerminal, Stdin, StdinLock, Stdio, StdioPipes, Stdout, StdoutLock, StdoutTerminal, StepBy, String, StripPrefixError, StrSearcher, subclockflags, Subdf3, SubI128, SuboI128, SuboU128, subrwflags, subscription, Subsf3, SubU128, Summary, suseconds, SYMBOL, SYMBOLIC, SymmetricDifference, SyncSender, sysinfo, System, SystemTime, SystemTimeError, Take, TakeWhile, tcb, tcflag, TcpListener, TcpStream, TempDir, TermInfo, TerminfoTerminal, termios, termios2, TestDesc, TestDescAndFn, TestEvent, TestFn, TestName, TestOpts, TestResult, Thread, threadattr, threadentry, ThreadId, tid, time, time64, timespec, TimeSpec, timestamp, timeval, timeval32, timezone, tm, tms, ToLowercase, ToUppercase, TraitObject, TryFromIntError, TryFromSliceError, TryIter, TryLockError, TryLockResult, TryRecvError, TrySendError, TypeId, U64x2, ucontext, ucred, Udivdi3, Udivmoddi4, Udivmodsi4, Udivmodti4, Udivsi3, Udivti3, UdpSocket, uid, UINT, uint16, uint32, uint64, uint8, uintmax, uintptr, ulflags, ULONG, ULONGLONG, Umoddi3, Umodsi3, Umodti3, UnicodeVersion, Union, Unique, UnixDatagram, UnixListener, UnixStream, Unpacked, UnsafeCell, UNWIND, UpgradeResult, useconds, user, userdata, USHORT, Utf16Encoder, Utf8Error, Utf8Lossy, Utf8LossyChunk, Utf8LossyChunksIter, utimbuf, utmp, utmpx, utsname, uuid, VacantEntry, Values, ValuesMut, VarError, Variables, Vars, VarsOs, Vec, VecDeque, vm, Void, WaitTimeoutResult, WaitToken, wchar, WCHAR, Weak, whence, WIN32, WinConsole, Windows, WindowsEnvKey, winsize, WORD, Wrapping, wrlen, WSADATA, WSAPROTOCOL, WSAPROTOCOLCHAIN, Wtf8, Wtf8Buf, Wtf8CodePoints, xsw, xucred, Zip, zx},
    % prelude macros
    morekeywords=[5]{assert!, assert_eq!, assert_ne!, cfg!, column!, compile_error!, concat!, concat_idents!, debug_assert!, debug_assert_eq!, debug_assert_ne!, env!, eprint!, eprintln!, file!, format!, format_args!, include!, include_bytes!, include_str!, line!, module_path!, option_env!, panic!, print!, println!, select!, stringify!, thread_local!, try!, unimplemented!, unreachable!, vec!, write!, writeln!},
    % common macros
    morekeywords=[5]{log!, info!, error!, debug!}
}

\lstdefinestyle{Rust}{
    language=Rust,
    identifierstyle=,
    commentstyle=\color[gray]{0.4},
    stringstyle=\color[rgb]{0, 0, 0.5},
    % reserved keyword
    keywordstyle=\bfseries,
    % trait
    keywordstyle=[2]\color[rgb]{0.75, 0, 0},
    % primitive type
    keywordstyle=[3]\color[rgb]{0, 0.5, 0},
    % type and value constructor
    keywordstyle=[4]\color[rgb]{0, 0.5, 0},
    % macro
    keywordstyle=[5]\color[rgb]{0, 0, 0.75},
    columns=spaceflexible,
    keepspaces=true,
    showspaces=false,
    showtabs=false,
    showstringspaces=true
}

\lstdefinelanguage{nginx}{
    keywords={upstream, backend, listen, location, proxy_pass},
    ndkeywords={server},
}
    
\lstdefinestyle{nginx}{
    language=nginx,
    keywordstyle=\color{orange}\bfseries,
    ndkeywordstyle=\color{blue}\bfseries
}

\lstdefinelanguage{json}{
    showstringspaces=false,
    morestring=*[d]{"}
}

\lstdefinestyle{json}{
    language=json,
    stringstyle=\ttfamily\color{red!50!brown}
}

\lstdefinelanguage{TOML}{
    comment = [l]{\#},
    keywords = {true, false},
    morestring = [b]{"}
}

\lstdefinestyle{TOML}{
    language=TOML,
    tabsize = 2,
    numberstyle = \color{white!30!black}\scriptsize,
    stepnumber = 1,
    basicstyle = \footnotesize\ttfamily,
    commentstyle={\color{green!50!black}\ttfamily},
    keywordstyle = {\bfseries\color{purple}},
    keywordstyle = [2]{\itshape\color{blue}},
    keywordstyle = [3]{\color{blue}},
    keywordstyle = [4]{\color{blue}},
    keywordstyle = [5]{\color{purple!50!blue}},
    stringstyle = \color{green!45!blue},
    aboveskip = \baselineskip,
    showstringspaces = false
}

\lstdefinelanguage{JS}{
    keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break},
    ndkeywords={class, extends, export, boolean, throw, implements, import, this},
    sensitive=false,
    comment=[l]{//},
    morecomment=[s]{/*}{*/},
    morestring=[b]',
    morestring=[b]",
}

\lstdefinestyle{JS} {
   language=JS,
   keywordstyle=\color{blue}\bfseries,
   ndkeywordstyle=\color{olive}\bfseries,
   commentstyle=\color{darkgray}\ttfamily,
   stringstyle=\color{red}\ttfamily
   extendedchars=true,
   basicstyle=\footnotesize\ttfamily,
   showstringspaces=false,
   showspaces=false,
   numberstyle=\footnotesize,
   showtabs=false,
   captionpos=b
}

\lstdefinelanguage{HTML}{
    keywords={head, body, div, ul, ol, lh, li, table, input, meta, title, thead, tbody, tr, th, pre, p, nav, main, header, h1, h2, h3, h4, h5, h6, footer, i, b, u, style, link, img, q},
    sensitive=false,
    comment=[s]{<!--}{-->},
    morestring=[b]",
}
    
\lstdefinestyle{HTML} {
    language=html,
    keywordstyle=\color{blue}\bfseries,
    commentstyle=\color{darkgray}\ttfamily,
    stringstyle=\color{red}\ttfamily
    extendedchars=true,
    basicstyle=\footnotesize\ttfamily,
    showstringspaces=false,
    showspaces=false,
    numberstyle=\footnotesize,
    showtabs=false,
    captionpos=b
}